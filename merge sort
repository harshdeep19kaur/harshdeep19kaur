#include <iostream>
using namespace std;
void merge(int arr[],int beg,int mid,int end)
{
  int i,j,k,index,temp[end-beg+1];
  i=index=beg;
  j=mid+1;while((i<=mid)&&(j<=end))
  {
    if(arr[i]<arr[j])
    {
      temp[index]=arr[i];
      i++;
    }
    else
    {
      temp[index]=arr[j];
      j++;
    }
    index++;
  }
  if(j>end)
  {
    while(i<=mid)
    {
      temp[index]=arr[i];
      i++;
      index++;
    }
  }
  else
  {
    while(j<=end)
    {
      temp[index]=arr[j];
      j++;
      index++;
    }
  }
  for(int k=beg;k<=end;k++)
  {
    arr[k]=temp[k];
  }
}
void mergesort(int arr[],int beg,int end)
{
  if(beg<end)
  {
    int mid=beg+(end-beg)/2;
    mergesort(arr,beg,end);
    mergesort(arr,mid+1,end);
    merge(arr,beg,mid,end);
  }
}
void traversal(int arr[],int n)
{
  for(int i=0;i<n;i++)
  {
    cout<<arr[i];
    cout<<endl;
  }
}
int main()
{
  int beg,mid,end;
  int arr[]={10,2,8,6,4};
  int n=sizeof(arr)/sizeof(arr[0]);
  cout<<"Array before sorting : "<<endl;
  traversal(arr,n);
  mergesort(arr,0,n-1);
  cout<<"Array after sorting : "<<endl;
  traversal(arr,n);
  }
